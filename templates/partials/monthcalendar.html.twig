{% set cal_id = unique_id(6) %}
<fuller-calendar id="fcl-{{ cal_id }}"></fuller-calendar>
<dialog id="dlg-{{ cal_id }}" style="border: none !important; border-radius: calc(5px * var(--ratio)); box-shadow: 0 0 #0000, 0 0 #0000, 0 25px 50px -12px rgba(0, 0, 0, 0.25); padding: 1.6rem; max-width: 400px; background-color: darkred;">
	<h2 style="margin: 2rem 0 1rem; font-weight: 800;">Book a sesh</h2>
	{{ include('partials/booking-dialog.html.twig') }}
</dialog>
<div id="legend"></div>

{% script 'https://cdn.jsdelivr.net/npm/@fullcalendar/core@6.1.10/index.global.js' %}

{% script 'https://cdn.jsdelivr.net/npm/@fullcalendar/daygrid@6.1.10/index.global.js' %}
{% style 'plugins://fullcalendar/assets/timegrid.css' %}

{% script 'https://cdn.jsdelivr.net/npm/@fullcalendar/interaction@6.1.10/index.global.min.js' %}
{% script 'https://cdn.jsdelivr.net/npm/@fullcalendar/timegrid@6.1.10/index.global.min.js' %}
{% script 'https://cdn.jsdelivr.net/npm/@fullcalendar/google-calendar@6.1.10/index.global.min.js' %}

{% script 'plugins://fullcalendar/assets/ical.js/build/ical.min.js' at 'bottom' %}

{% script at 'bottom' %}

class FullerCalendar extends HTMLElement {
	constructor() {
		super();

		this.attachShadow({
			mode: 'open',
			});

		const calendarEl = document.createElement('div');
		calendarEl.id = this.id;
		this.shadowRoot.append(calendarEl);

		const sheet = new CSSStyleSheet();
		sheet.replaceSync(`
			#${calendarEl.id} {
				--fc-page-bg-color: initial;
			}
			`);
		this.shadowRoot.adoptedStyleSheets = [sheet];

		const calendar = new FullCalendar.Calendar(calendarEl, {
			initialView: "timeGridWeek",
		height: 'auto',
		allDaySlot: false,
		slotMinTime: '07:00:00',
		selectable: true,
		selectMirror: true,
		selectOverlap: false,
		nowIndicator: true,
		stickyHeaderDates: true,
		// footerToolbar: true,
		titleFormat: { month: 'short', day: 'numeric' },
		dayHeaderFormat: function(date) {
			const dt = date.date.marker;
			const dow = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']; // FIXME: hacky
			return dow[dt.getDay()] + ' ' + dt.getDate() + '/' + (dt.getMonth() + 1);
			},
		googleCalendarApiKey: '{{ config.plugins.fullcalendar.google_api_key }}',
		events: { {# TODO: conditionally include this and other ical properties/events #}
			googleCalendarId: '{{ gcal }}',
			},
		select: function(selectMetadata) { console.log(selectMetadata);
			// alert(`you selected ${selectMetadata.startStr} to ${selectMetadata.endStr}`);
			// TODO: reject any dates in the past
			const dialog = document.querySelector('#dlg-{{ cal_id }}');
			const timeFormat = new Intl.DateTimeFormat('en-GB', {hour: 'numeric', minute: 'numeric'});
			const start = new Date(selectMetadata.startStr);
			const finish = new Date(selectMetadata.endStr);
			const startField = dialog.querySelector('#start');
			const finishField = dialog.querySelector('#finish');
			startField.value = timeFormat.format(start);
			finishField.value = timeFormat.format(finish);
			dialog.showModal();
			},
		});


		calendar.render();

		setTimeout( () => {
			calendarEl.querySelectorAll('[style]').forEach((el) => {
				el.removeAttribute('style');
				});
		}, 2000);
		calendar.today();
	}
}

customElements.define('fuller-calendar', FullerCalendar);

{% endscript %}
